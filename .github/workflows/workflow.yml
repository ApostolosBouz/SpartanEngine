name: build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        api: [vulkan, d3d12]
    runs-on: "windows-latest"
    env:
      msbuild_path: C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Specify your required Python version

      - name: Install Python dependencies
        run: python -m pip install requests tqdm

      - name: Generate project files
        shell: python
        env:
          API: ${{ matrix.api }}
        run: |
          import subprocess
          import os
          api = os.environ["API"]
          subprocess.run(f"python generate_vs2022_{api}.py")

      - name: Build
        shell: cmd
        run: '"%msbuild_path%\MSBuild.exe" /p:Platform=Windows /p:Configuration=Release /m spartan.sln'
        
      #- name: Run engine
      #  if: matrix.api != 'd3d12'
      #  shell: cmd
      #  run: build_scripts\ci_test.bat ${{ matrix.api }}
      #
      #- name: Check run results
      #  if: matrix.api != 'd3d12'
      #  shell: pwsh
      #  run: |
      #    $file = "binaries/ci_test.txt"
      #    if (Test-Path $file) {
      #        $content = Get-Content $file
      #        if ($content -eq "0") {
      #            Write-Output "Engine boot-up successful."
      #        } else {
      #            Write-Error "Engine boot-up indicated a failure."
      #            exit 1
      #        }
      #    } else {
      #        Write-Error "ci_test.txt not found. Engine boot-up failed."
      #        exit 1
      #    }

      - name: Create artifact
        if: github.event_name != 'pull_request' && matrix.api != 'd3d12'
        shell: cmd
        run: build_scripts\package_artifact.bat ${{ matrix.api }}
      
      - name: Upload artifact
        if: github.event_name != 'pull_request' && matrix.api != 'd3d12'
        uses: actions/upload-artifact@v4
        with:
          name: build_${{ matrix.api }}
          path: build_${{ matrix.api }}.7z

  release:
    if: github.event_name != 'pull_request'
    runs-on: "ubuntu-latest"
    needs:
      - build
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
     
      - name: Download vulkan build
        uses: actions/download-artifact@v4
        with:
          name: build_vulkan
          path: build_vulkan.7z
      
      - name: Publish release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: build_vulkan.7z
